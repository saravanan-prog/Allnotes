
JDBC PreparedStatement:
-----------------------

    A JDBC PreparedStatement is a powerful feature in Java used to execute parameterized SQL queries safely and efficiently. It helps prevent SQL injection and improves performance when executing the same query multiple times with different values.

    
    Example 1 :- 

       String query = "select * from mentor where id = ? and name= ? ";
        
       Connection con = DriverManger.getConnection(url,username,password);
       PreparedStatement pst = con.prepareStatement(query);
       pst.setInt(1,25);
       pst.setString(2,"yuvi");
       RestulSet rs = pst.excuteQuery();


    Example 2 
      
      String query = "insert into mentor (name,skills,experience) values (?,?,?)";
      
      Connection con = DriverManager.getConnection(url,username,password);
      prepareStatement pst = con.prepareStatement(query);
      pst.setString(1,"raja");
      pst.setString(2,"python");
      pst.setInt(3,5);
      int rows = pst.excuteUpdate();
      







Select Query ExampleCode
------------------------
import java.sql.*;

public class SelectExample {
    public static void main(String[] args) {
        String url = "jdbc:mysql://localhost:3306/mydb";
        String user = "root";
        String password = "password";

        try (Connection conn = DriverManager.getConnection(url, user, password)) {
            String sql = "SELECT * FROM students WHERE age > ?";
            PreparedStatement stmt = conn.prepareStatement(sql);

            stmt.setInt(1, 20);  // Replace ? with 20

            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                int id = rs.getInt("id");
                String name = rs.getString("name");
                int age = rs.getInt("age");

                System.out.println("ID: " + id + ", Name: " + name + ", Age: " + age);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}


DB Insert ExampleCode
----------------------

import java.sql.*;

public class InsertExample {
    public static void main(String[] args) {
        String url = "jdbc:mysql://localhost:3306/mydb";
        String user = "root";
        String password = "password";

        try (Connection conn = DriverManager.getConnection(url, user, password)) {
            String sql = "INSERT INTO students (name, age) VALUES (?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);

            stmt.setString(1, "John Doe");  // First ? becomes "John Doe"
            stmt.setInt(2, 22);             // Second ? becomes 22

            int rowsInserted = stmt.executeUpdate();

            System.out.println(rowsInserted + " row(s) inserted.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
UPDATE Query ExampleCode
------------------------
import java.sql.*;
public class UpdateExample {
    public static void main(String[] args) {
        String url = "jdbc:mysql://localhost:3306/mydb";
        String user = "root";
        String password = "password";

        try (Connection conn = DriverManager.getConnection(url, user, password)) {
            String sql = "UPDATE students SET age = ? WHERE id = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);

            stmt.setInt(1, 25);   // Set new age
            stmt.setInt(2, 101);  // Set ID of student to update

            int rowsUpdated = stmt.executeUpdate();
            System.out.println(rowsUpdated + " row(s) updated.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

Delete Query ExampleCode
-------------------------

import java.sql.*;

public class DeleteExample {
    public static void main(String[] args) {
        String url = "jdbc:mysql://localhost:3306/mydb";
        String user = "root";
        String password = "password";

        try (Connection conn = DriverManager.getConnection(url, user, password)) {
            String sql = "DELETE FROM students WHERE id = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);

            stmt.setInt(1, 101);  // Replace ? with the ID of the student to delete

            int rowsDeleted = stmt.executeUpdate();
            System.out.println(rowsDeleted + " row(s) deleted.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

