Here's an example of making an HTTP service API call in Angular 18:

Create an HTTP Service
----------------------

http.service.ts
------------------

    import { Injectable } from '@angular/core';
    import { HttpClient, HttpHeaders } from '@angular/common/http';
    import { Observable } from 'rxjs';

    @Injectable({
        providedIn: 'root'
    })
    export class HttpService {

        private apiUrl = 'https://fakestoreapi.com'; 

        constructor(private http: HttpClient) { }

        getPosts(): Observable<any> {
            return this.http.get(`${this.apiUrl}/products`);
        }

        getPostById(id: number): Observable<any> {
            return this.http.get(`${this.apiUrl}/products/${id}`);
        }

        createPost(post: any): Observable<any> {
            return this.http.post(`${this.apiUrl}/posts`, post);
        }

        updatePost(id: number, post: any): Observable<any> {
            return this.http.put(`${this.apiUrl}/posts/${id}`, post);
        }

        deletePost(id: number): Observable<any> {
            return this.http.delete(`${this.apiUrl}/posts/${id}`);
        }
    }


Inject and Use the HTTP Service


app.component.ts
---------------------

import { Component, OnInit } from '@angular/core';
import { HttpService } from './http.service';

@Component({
  selector: 'app-root',
  template: `
    <ul>
      <li *ngFor="let post of posts">{{ post.title }}</li>
    </ul>
  `
})
export class AppComponent implements OnInit {

  posts: any[];

  constructor(private httpService: HttpService) { }

  ngOnInit(): void {
    this.httpService.getPosts().subscribe(response => {
      this.posts = response;
    });
  }
}

